
> (mlg "cl-book")


======================= c o m p i l i n g ===================================

Project name: cl-book
  Input : (cl-book.ccg, cl-book.lisptokens)
  Output: cl-book.ccg.lisp 
** Check cl-book.ccg.lisp for THE FIRST ERROR in cl-book.ccg if load fails.
======================= l o a d i n g =======================================

Project cl-book files
-----------------------------------------------------------------------------
  CCG grammar source      : cl-book.ccg
    Its token form        : cl-book.lisptokens
  Compiled/loaded grammar : cl-book.ccg.lisp
  Supervision source      : cl-book.sup (optional)
       *CCG-GRAMMAR*      : 37 entries
   *LEX-RULES-TABLE*      : 4 entries
=============================================================================
T
> (load "cl-book.testsuite.lisp")

T
> (test-ders)


  do (rules) or (onoff) for rules and switches
  ---------------------------
  Any non-standard rule     ? NO
  Currently loaded grammar  : cl-book.ccg.lisp
 *CCG-GRAMMAR*              : 37 items
 *LEX-RULES-TABLE*          : 4 items
 *CKY-HASHTABLE*            : 0 items
 *CKY-INPUT* for the table  : NIL 
  Most likely LF w/weight   : NIL 
  Its most likely derivation: NIL
  Sum of weighted counts    : 0.0 
  Most likely LF's cells    : NIL 
  Number of differing LFs   : 0 
  Most weighted derivation  : NIL 
  ---------------------------

"CCGlab, version 7.0"
All rules set. Rule set to be controlled by user.

=======
OTEST
========


Derivation 1
--------------
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (KNOW) := (S\NP)/^S
        : (LAM P (LAM X ((KNOW P) X)))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (CAN) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (CAN (P X))))
>B    (YOU)(CAN) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
>D    (WHAT)(YOU CAN) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
              (H X)))))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
>D    (WHAT)(YOU) := S/((S\NP)/NP)
        : (LAM H ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X)))))
>     (AND)(WHAT YOU) := (S/((S\NP)/NP))\*(S/((S\NP)/NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X))))))
<     (WHAT YOU CAN)(AND WHAT YOU) := S/((S\NP)/NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X))))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X))))
             (LAM X
              ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
               (H X))))))
LEX   (SHOULD) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (SHALL (P X))))
LEX   (NOT) := (S\NP)/(S\NP)
        : (LAM P (LAM X (NOT (P X))))
LEX   (DO) := (S\^NP)/^NP
        : (LAM X (LAM Y ((DO X) Y)))
>B    (NOT)(DO) := (S\NP)/^NP
        : (LAM X ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
>B    (SHOULD)(NOT DO) := (S\NP)/^NP
        : (LAM X
           ((LAM P (LAM X (SHALL (P X))))
            ((LAM X
              ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
             X)))
>     (WHAT YOU CAN AND WHAT YOU)(SHOULD NOT DO) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X))))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X))))
              (LAM X
               ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                (H X))))))
           (LAM X
            ((LAM P (LAM X (SHALL (P X))))
             ((LAM X
               ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
              X))))
>     (KNOW)(WHAT YOU CAN AND WHAT YOU SHOULD NOT DO) := S\NP
        : ((LAM P (LAM X ((KNOW P) X)))
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM H
               ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X))))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                 (H X))))))
            (LAM X
             ((LAM P (LAM X (SHALL (P X))))
              ((LAM X
                ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
               X)))))
>     (I)(KNOW WHAT YOU CAN AND WHAT YOU SHOULD NOT DO) := S
        : ((LAM P (P I))
           ((LAM P (LAM X ((KNOW P) X)))
            ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM H
                ((LAM P (LAM X (WHAT (P X))))
                 (LAM X ((LAM P (P YOU)) (H X))))))
              (LAM H
               ((LAM P (LAM X (WHAT (P X))))
                (LAM X
                 ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                  (H X))))))
             (LAM X
              ((LAM P (LAM X (SHALL (P X))))
               ((LAM X
                 ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
                X))))))

Final LF, normal-order evaluated: 

    ((KNOW
      ((AND (LAM G377 (WHAT (SHALL (NOT ((DO G377) YOU))))))
       (LAM G382 (WHAT (CAN (SHALL (NOT ((DO G382) YOU))))))))
     I) =
    (KNOW
     (AND (\ G387 . WHAT (SHALL (NOT (DO G387 YOU))))
      (\ G392 . WHAT (CAN (SHALL (NOT (DO G392 YOU))))))
     I)

Derivation 2
--------------
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (KNOW) := (S\NP)/^S
        : (LAM P (LAM X ((KNOW P) X)))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (CAN) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (CAN (P X))))
>B    (YOU)(CAN) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
>D    (WHAT)(YOU CAN) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
              (H X)))))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (SHOULD) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (SHALL (P X))))
>B    (YOU)(SHOULD) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
>D    (WHAT)(YOU SHOULD) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
              (H X)))))
>     (AND)(WHAT YOU SHOULD) := (S/^((S\NP)/NP))\*(S/^((S\NP)/NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X))))
             (LAM X
              ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
               (H X))))))
<     (WHAT YOU CAN)(AND WHAT YOU SHOULD) := S/^((S\NP)/NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X))))
              (LAM X
               ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
                (H X))))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X))))
             (LAM X
              ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
               (H X))))))
LEX   (NOT) := (S\NP)/(S\NP)
        : (LAM P (LAM X (NOT (P X))))
LEX   (DO) := (S\^NP)/^NP
        : (LAM X (LAM Y ((DO X) Y)))
>B    (NOT)(DO) := (S\NP)/^NP
        : (LAM X ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
>     (WHAT YOU CAN AND WHAT YOU SHOULD)(NOT DO) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
                 (H X))))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X))))
              (LAM X
               ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                (H X))))))
           (LAM X ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X))))
>     (KNOW)(WHAT YOU CAN AND WHAT YOU SHOULD NOT DO) := S\NP
        : ((LAM P (LAM X ((KNOW P) X)))
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM H
               ((LAM P (LAM X (WHAT (P X))))
                (LAM X
                 ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
                  (H X))))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                 (H X))))))
            (LAM X
             ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))))
>     (I)(KNOW WHAT YOU CAN AND WHAT YOU SHOULD NOT DO) := S
        : ((LAM P (P I))
           ((LAM P (LAM X ((KNOW P) X)))
            ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM H
                ((LAM P (LAM X (WHAT (P X))))
                 (LAM X
                  ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
                   (H X))))))
              (LAM H
               ((LAM P (LAM X (WHAT (P X))))
                (LAM X
                 ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                  (H X))))))
             (LAM X
              ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW
      ((AND (LAM G397 (WHAT (SHALL (NOT ((DO G397) YOU))))))
       (LAM G402 (WHAT (CAN (NOT ((DO G402) YOU)))))))
     I) =
    (KNOW
     (AND (\ G407 . WHAT (SHALL (NOT (DO G407 YOU))))
      (\ G412 . WHAT (CAN (NOT (DO G412 YOU)))))
     I)

Derivation 3
--------------
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (KNOW) := (S\NP)/^S
        : (LAM P (LAM X ((KNOW P) X)))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (CAN) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (CAN (P X))))
>B    (YOU)(CAN) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
>D    (WHAT)(YOU CAN) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
              (H X)))))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (SHOULD) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (SHALL (P X))))
LEX   (NOT) := (S\NP)/(S\NP)
        : (LAM P (LAM X (NOT (P X))))
>B    (SHOULD)(NOT) := (S\NP)/(S\NP)
        : (LAM X
           ((LAM P (LAM X (SHALL (P X)))) ((LAM P (LAM X (NOT (P X)))) X)))
>B    (YOU)(SHOULD NOT) := S/(S\NP)
        : (LAM X
           ((LAM P (P YOU))
            ((LAM X
              ((LAM P (LAM X (SHALL (P X)))) ((LAM P (LAM X (NOT (P X)))) X)))
             X)))
>D    (WHAT)(YOU SHOULD NOT) := S/((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X
               ((LAM P (P YOU))
                ((LAM X
                  ((LAM P (LAM X (SHALL (P X))))
                   ((LAM P (LAM X (NOT (P X)))) X)))
                 X)))
              (H X)))))
>     (AND)(WHAT YOU SHOULD NOT) := (S/((S\NP)/NP))\*(S/((S\NP)/NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X))))
             (LAM X
              ((LAM X
                ((LAM P (P YOU))
                 ((LAM X
                   ((LAM P (LAM X (SHALL (P X))))
                    ((LAM P (LAM X (NOT (P X)))) X)))
                  X)))
               (H X))))))
<     (WHAT YOU CAN)(AND WHAT YOU SHOULD NOT) := S/((S\NP)/NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X))))
              (LAM X
               ((LAM X
                 ((LAM P (P YOU))
                  ((LAM X
                    ((LAM P (LAM X (SHALL (P X))))
                     ((LAM P (LAM X (NOT (P X)))) X)))
                   X)))
                (H X))))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X))))
             (LAM X
              ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
               (H X))))))
LEX   (DO) := (S\^NP)/^NP
        : (LAM X (LAM Y ((DO X) Y)))
>     (WHAT YOU CAN AND WHAT YOU SHOULD NOT)(DO) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X
                  ((LAM P (P YOU))
                   ((LAM X
                     ((LAM P (LAM X (SHALL (P X))))
                      ((LAM P (LAM X (NOT (P X)))) X)))
                    X)))
                 (H X))))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X))))
              (LAM X
               ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                (H X))))))
           (LAM X (LAM Y ((DO X) Y))))
>     (KNOW)(WHAT YOU CAN AND WHAT YOU SHOULD NOT DO) := S\NP
        : ((LAM P (LAM X ((KNOW P) X)))
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM H
               ((LAM P (LAM X (WHAT (P X))))
                (LAM X
                 ((LAM X
                   ((LAM P (P YOU))
                    ((LAM X
                      ((LAM P (LAM X (SHALL (P X))))
                       ((LAM P (LAM X (NOT (P X)))) X)))
                     X)))
                  (H X))))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                 (H X))))))
            (LAM X (LAM Y ((DO X) Y)))))
>     (I)(KNOW WHAT YOU CAN AND WHAT YOU SHOULD NOT DO) := S
        : ((LAM P (P I))
           ((LAM P (LAM X ((KNOW P) X)))
            ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM H
                ((LAM P (LAM X (WHAT (P X))))
                 (LAM X
                  ((LAM X
                    ((LAM P (P YOU))
                     ((LAM X
                       ((LAM P (LAM X (SHALL (P X))))
                        ((LAM P (LAM X (NOT (P X)))) X)))
                      X)))
                   (H X))))))
              (LAM H
               ((LAM P (LAM X (WHAT (P X))))
                (LAM X
                 ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                  (H X))))))
             (LAM X (LAM Y ((DO X) Y))))))

Final LF, normal-order evaluated: 

    ((KNOW
      ((AND (LAM G417 (WHAT (SHALL (NOT ((DO G417) YOU))))))
       (LAM G422 (WHAT (CAN ((DO G422) YOU))))))
     I) =
    (KNOW
     (AND (\ G427 . WHAT (SHALL (NOT (DO G427 YOU))))
      (\ G432 . WHAT (CAN (DO G432 YOU))))
     I)

Derivation 4
--------------
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (KNOW) := (S\NP)/^S
        : (LAM P (LAM X ((KNOW P) X)))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (CAN) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (CAN (P X))))
>B    (YOU)(CAN) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
>D    (WHAT)(YOU CAN) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
              (H X)))))
>B    (KNOW)(WHAT YOU CAN) := (S\NP)/^((S\NP)/NP)
        : (LAM X
           ((LAM P (LAM X ((KNOW P) X)))
            ((LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                 (H X)))))
             X)))
>B    (I)(KNOW WHAT YOU CAN) := S/^((S\NP)/NP)
        : (LAM X
           ((LAM P (P I))
            ((LAM X
              ((LAM P (LAM X ((KNOW P) X)))
               ((LAM H
                 ((LAM P (LAM X (WHAT (P X))))
                  (LAM X
                   ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                    (H X)))))
                X)))
             X)))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
>D    (WHAT)(YOU) := S/((S\NP)/NP)
        : (LAM H ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X)))))
>     (AND)(WHAT YOU) := (S/((S\NP)/NP))\*(S/((S\NP)/NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X))))))
<     (I KNOW WHAT YOU CAN)(AND WHAT YOU) := S/((S\NP)/NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X))))))
           (LAM X
            ((LAM P (P I))
             ((LAM X
               ((LAM P (LAM X ((KNOW P) X)))
                ((LAM H
                  ((LAM P (LAM X (WHAT (P X))))
                   (LAM X
                    ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                     (H X)))))
                 X)))
              X))))
LEX   (SHOULD) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (SHALL (P X))))
LEX   (NOT) := (S\NP)/(S\NP)
        : (LAM P (LAM X (NOT (P X))))
LEX   (DO) := (S\^NP)/^NP
        : (LAM X (LAM Y ((DO X) Y)))
>B    (NOT)(DO) := (S\NP)/^NP
        : (LAM X ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
>B    (SHOULD)(NOT DO) := (S\NP)/^NP
        : (LAM X
           ((LAM P (LAM X (SHALL (P X))))
            ((LAM X
              ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
             X)))
>     (I KNOW WHAT YOU CAN AND WHAT YOU)(SHOULD NOT DO) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X)))) (LAM X ((LAM P (P YOU)) (H X))))))
            (LAM X
             ((LAM P (P I))
              ((LAM X
                ((LAM P (LAM X ((KNOW P) X)))
                 ((LAM H
                   ((LAM P (LAM X (WHAT (P X))))
                    (LAM X
                     ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                      (H X)))))
                  X)))
               X))))
           (LAM X
            ((LAM P (LAM X (SHALL (P X))))
             ((LAM X
               ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
              X))))

Final LF, normal-order evaluated: 

    ((AND (LAM G437 (WHAT (SHALL (NOT ((DO G437) YOU))))))
     ((KNOW (LAM G440 (WHAT (CAN (SHALL (NOT ((DO G440) YOU))))))) I)) =
    (AND (\ G448 . WHAT (SHALL (NOT (DO G448 YOU))))
     (KNOW (\ G451 . WHAT (CAN (SHALL (NOT (DO G451 YOU))))) I))

Derivation 5
--------------
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (KNOW) := (S\NP)/^S
        : (LAM P (LAM X ((KNOW P) X)))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (CAN) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (CAN (P X))))
>B    (YOU)(CAN) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
>D    (WHAT)(YOU CAN) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
              (H X)))))
>B    (KNOW)(WHAT YOU CAN) := (S\NP)/^((S\NP)/NP)
        : (LAM X
           ((LAM P (LAM X ((KNOW P) X)))
            ((LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                 (H X)))))
             X)))
>B    (I)(KNOW WHAT YOU CAN) := S/^((S\NP)/NP)
        : (LAM X
           ((LAM P (P I))
            ((LAM X
              ((LAM P (LAM X ((KNOW P) X)))
               ((LAM H
                 ((LAM P (LAM X (WHAT (P X))))
                  (LAM X
                   ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                    (H X)))))
                X)))
             X)))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (SHOULD) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (SHALL (P X))))
>B    (YOU)(SHOULD) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
>D    (WHAT)(YOU SHOULD) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
              (H X)))))
>     (AND)(WHAT YOU SHOULD) := (S/^((S\NP)/NP))\*(S/^((S\NP)/NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X))))
             (LAM X
              ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
               (H X))))))
<     (I KNOW WHAT YOU CAN)(AND WHAT YOU SHOULD) := S/^((S\NP)/NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X))))
              (LAM X
               ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
                (H X))))))
           (LAM X
            ((LAM P (P I))
             ((LAM X
               ((LAM P (LAM X ((KNOW P) X)))
                ((LAM H
                  ((LAM P (LAM X (WHAT (P X))))
                   (LAM X
                    ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                     (H X)))))
                 X)))
              X))))
LEX   (NOT) := (S\NP)/(S\NP)
        : (LAM P (LAM X (NOT (P X))))
LEX   (DO) := (S\^NP)/^NP
        : (LAM X (LAM Y ((DO X) Y)))
>B    (NOT)(DO) := (S\NP)/^NP
        : (LAM X ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X)))
>     (I KNOW WHAT YOU CAN AND WHAT YOU SHOULD)(NOT DO) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (SHALL (P X)))) X)))
                 (H X))))))
            (LAM X
             ((LAM P (P I))
              ((LAM X
                ((LAM P (LAM X ((KNOW P) X)))
                 ((LAM H
                   ((LAM P (LAM X (WHAT (P X))))
                    (LAM X
                     ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                      (H X)))))
                  X)))
               X))))
           (LAM X ((LAM P (LAM X (NOT (P X)))) ((LAM X (LAM Y ((DO X) Y))) X))))

Final LF, normal-order evaluated: 

    ((AND (LAM G459 (WHAT (SHALL (NOT ((DO G459) YOU))))))
     ((KNOW (LAM G463 (WHAT (CAN (NOT ((DO G463) YOU)))))) I)) =
    (AND (\ G470 . WHAT (SHALL (NOT (DO G470 YOU))))
     (KNOW (\ G474 . WHAT (CAN (NOT (DO G474 YOU)))) I))

Derivation 6
--------------
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (KNOW) := (S\NP)/^S
        : (LAM P (LAM X ((KNOW P) X)))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (CAN) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (CAN (P X))))
>B    (YOU)(CAN) := S/^(S\NP)
        : (LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
>D    (WHAT)(YOU CAN) := S/^((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
              (H X)))))
>B    (KNOW)(WHAT YOU CAN) := (S\NP)/^((S\NP)/NP)
        : (LAM X
           ((LAM P (LAM X ((KNOW P) X)))
            ((LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                 (H X)))))
             X)))
>B    (I)(KNOW WHAT YOU CAN) := S/^((S\NP)/NP)
        : (LAM X
           ((LAM P (P I))
            ((LAM X
              ((LAM P (LAM X ((KNOW P) X)))
               ((LAM H
                 ((LAM P (LAM X (WHAT (P X))))
                  (LAM X
                   ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                    (H X)))))
                X)))
             X)))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (WHAT) := S/^(S/NP)
        : (LAM P (LAM X (WHAT (P X))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (SHOULD) := (S\NP)/^(S\NP)
        : (LAM P (LAM X (SHALL (P X))))
LEX   (NOT) := (S\NP)/(S\NP)
        : (LAM P (LAM X (NOT (P X))))
>B    (SHOULD)(NOT) := (S\NP)/(S\NP)
        : (LAM X
           ((LAM P (LAM X (SHALL (P X)))) ((LAM P (LAM X (NOT (P X)))) X)))
>B    (YOU)(SHOULD NOT) := S/(S\NP)
        : (LAM X
           ((LAM P (P YOU))
            ((LAM X
              ((LAM P (LAM X (SHALL (P X)))) ((LAM P (LAM X (NOT (P X)))) X)))
             X)))
>D    (WHAT)(YOU SHOULD NOT) := S/((S\NP)/NP)
        : (LAM H
           ((LAM P (LAM X (WHAT (P X))))
            (LAM X
             ((LAM X
               ((LAM P (P YOU))
                ((LAM X
                  ((LAM P (LAM X (SHALL (P X))))
                   ((LAM P (LAM X (NOT (P X)))) X)))
                 X)))
              (H X)))))
>     (AND)(WHAT YOU SHOULD NOT) := (S/((S\NP)/NP))\*(S/((S\NP)/NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM H
            ((LAM P (LAM X (WHAT (P X))))
             (LAM X
              ((LAM X
                ((LAM P (P YOU))
                 ((LAM X
                   ((LAM P (LAM X (SHALL (P X))))
                    ((LAM P (LAM X (NOT (P X)))) X)))
                  X)))
               (H X))))))
<     (I KNOW WHAT YOU CAN)(AND WHAT YOU SHOULD NOT) := S/((S\NP)/NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM H
             ((LAM P (LAM X (WHAT (P X))))
              (LAM X
               ((LAM X
                 ((LAM P (P YOU))
                  ((LAM X
                    ((LAM P (LAM X (SHALL (P X))))
                     ((LAM P (LAM X (NOT (P X)))) X)))
                   X)))
                (H X))))))
           (LAM X
            ((LAM P (P I))
             ((LAM X
               ((LAM P (LAM X ((KNOW P) X)))
                ((LAM H
                  ((LAM P (LAM X (WHAT (P X))))
                   (LAM X
                    ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                     (H X)))))
                 X)))
              X))))
LEX   (DO) := (S\^NP)/^NP
        : (LAM X (LAM Y ((DO X) Y)))
>     (I KNOW WHAT YOU CAN AND WHAT YOU SHOULD NOT)(DO) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM H
              ((LAM P (LAM X (WHAT (P X))))
               (LAM X
                ((LAM X
                  ((LAM P (P YOU))
                   ((LAM X
                     ((LAM P (LAM X (SHALL (P X))))
                      ((LAM P (LAM X (NOT (P X)))) X)))
                    X)))
                 (H X))))))
            (LAM X
             ((LAM P (P I))
              ((LAM X
                ((LAM P (LAM X ((KNOW P) X)))
                 ((LAM H
                   ((LAM P (LAM X (WHAT (P X))))
                    (LAM X
                     ((LAM X ((LAM P (P YOU)) ((LAM P (LAM X (CAN (P X)))) X)))
                      (H X)))))
                  X)))
               X))))
           (LAM X (LAM Y ((DO X) Y))))

Final LF, normal-order evaluated: 

    ((AND (LAM G481 (WHAT (SHALL (NOT ((DO G481) YOU))))))
     ((KNOW (LAM G486 (WHAT (CAN ((DO G486) YOU))))) I)) =
    (AND (\ G492 . WHAT (SHALL (NOT (DO G492 YOU))))
     (KNOW (\ G497 . WHAT (CAN (DO G497 YOU))) I))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
CL169
========


Derivation 1
--------------
LEX   (THE) := (S/(S\NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (MAN) := N
        : (LAM X (MAN X))
LEX   (WHO) := (N\N)/(S\NP)
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (THINK) := (S\NP)/SP
        : (LAM P (LAM X ((THINK P) X)))
>B    (I)(THINK) := S/SP
        : (LAM X ((LAM P (P I)) ((LAM P (LAM X ((THINK P) X))) X)))
>D    (WHO)(I THINK) := (N\N)/(SP\NP)
        : (LAM H
           ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             ((LAM X ((LAM P (P I)) ((LAM P (LAM X ((THINK P) X))) X)))
              (H X)))))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (WHO) := (N\N)/(S\NP)
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARRY) := S/(S\NP)
        : (LAM P (P BARRY))
LEX   (CLAIMS) := (S\NP)/SP
        : (LAM P (LAM X ((CLAIM P) X)))
>B    (BARRY)(CLAIMS) := S/SP
        : (LAM X ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
>D    (WHO)(BARRY CLAIMS) := (N\N)/(SP\NP)
        : (LAM H
           ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             ((LAM X ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
              (H X)))))
>     (AND)(WHO BARRY CLAIMS) := ((N\N)/(SP\NP))\*((N\N)/(SP\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM H
            ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM X
              ((LAM X ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
               (H X))))))
<     (WHO I THINK)(AND WHO BARRY CLAIMS) := (N\N)/(SP\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM H
             ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM X
               ((LAM X ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
                (H X))))))
           (LAM H
            ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM X
              ((LAM X ((LAM P (P I)) ((LAM P (LAM X ((THINK P) X))) X)))
               (H X))))))
LEX   (OWNS) := (SP\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
LEX   (THE) := ((SP\NP)\((SP\NP)/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := (SP\NP)\((SP\NP)/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (OWNS)(THE HOUSE) := SP\NP
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X (LAM Y ((OWN X) Y))))
>     (WHO I THINK AND WHO BARRY CLAIMS)(OWNS THE HOUSE) := N\N
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM H
              ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM X
                ((LAM X ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
                 (H X))))))
            (LAM H
             ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM X
               ((LAM X ((LAM P (P I)) ((LAM P (LAM X ((THINK P) X))) X)))
                (H X))))))
           (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
            (LAM X (LAM Y ((OWN X) Y)))))
<     (MAN)(WHO I THINK AND WHO BARRY CLAIMS OWNS THE HOUSE) := N
        : (((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM H
               ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
                (LAM X
                 ((LAM X ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
                  (H X))))))
             (LAM H
              ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM X
                ((LAM X ((LAM P (P I)) ((LAM P (LAM X ((THINK P) X))) X)))
                 (H X))))))
            (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
             (LAM X (LAM Y ((OWN X) Y)))))
           (LAM X (MAN X)))
>     (THE)(MAN WHO I THINK AND WHO BARRY CLAIMS OWNS THE HOUSE) := S/(S\NP)
        : ((LAM X (LAM P (P X)))
           (((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM H
                ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
                 (LAM X
                  ((LAM X
                    ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
                   (H X))))))
              (LAM H
               ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
                (LAM X
                 ((LAM X ((LAM P (P I)) ((LAM P (LAM X ((THINK P) X))) X)))
                  (H X))))))
             (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
              (LAM X (LAM Y ((OWN X) Y)))))
            (LAM X (MAN X))))
LEX   (BURNS) := S\NP
        : (LAM X (BURN X))
>     (THE MAN WHO I THINK AND WHO BARRY CLAIMS OWNS THE HOUSE)(BURNS) := S
        : (((LAM X (LAM P (P X)))
            (((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
                (LAM H
                 ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
                  (LAM X
                   ((LAM X
                     ((LAM P (P BARRY)) ((LAM P (LAM X ((CLAIM P) X))) X)))
                    (H X))))))
               (LAM H
                ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
                 (LAM X
                  ((LAM X ((LAM P (P I)) ((LAM P (LAM X ((THINK P) X))) X)))
                   (H X))))))
              (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
               (LAM X (LAM Y ((OWN X) Y)))))
             (LAM X (MAN X))))
           (LAM X (BURN X)))

Final LF, normal-order evaluated: 

    (BURN
     (((AND
        (LAM Q
         (LAM G503
          ((AND ((CLAIM ((OWN (LAM X (HOUSE X))) G503)) BARRY)) (Q G503)))))
       (LAM Q
        (LAM G506
         ((AND ((THINK ((OWN (LAM X (HOUSE X))) G506)) I)) (Q G506)))))
      (LAM X (MAN X)))) =
    (BURN
     (AND
      (\ Q . \ G515 . AND (CLAIM (OWN (\ X . HOUSE X) G515) BARRY) (Q G515))
      (\ Q . \ G518 . AND (THINK (OWN (\ X . HOUSE X) G518) I) (Q G518))
      (\ X . MAN X)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
PARGAP
========


Derivation 1
--------------
LEX   (THE) := (S/(S\NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (BOOK) := N
        : (LAM X (BOOK X))
LEX   (WHICH) := (N\N)/(S/NP)
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (READ) := (S\NP)/NP
        : (LAM X (LAM Y ((READ X) Y)))
LEX   (WITHOUT) := ((S\NP)\(S\NP))/C
        : (LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
LEX   (UNDERSTANDING) := C/NP
        : (LAM X (LAM Y ((UNDERSTAND X) Y)))
>B    (WITHOUT)(UNDERSTANDING) := ((S\NP)\(S\NP))/NP
        : (LAM X
           ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
            ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
<Sx   (READ)(WITHOUT UNDERSTANDING) := (S\NP)/NP
        : (LAM X
           (((LAM X
              ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
               ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
             X)
            ((LAM X (LAM Y ((READ X) Y))) X)))
>B    (I)(READ WITHOUT UNDERSTANDING) := S/NP
        : (LAM X
           ((LAM P (P I))
            ((LAM X
              (((LAM X
                 ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                  ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                X)
               ((LAM X (LAM Y ((READ X) Y))) X)))
             X)))
>     (WHICH)(I READ WITHOUT UNDERSTANDING) := N\N
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM X
            ((LAM P (P I))
             ((LAM X
               (((LAM X
                  ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                   ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                 X)
                ((LAM X (LAM Y ((READ X) Y))) X)))
              X))))
<     (BOOK)(WHICH I READ WITHOUT UNDERSTANDING) := N
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             ((LAM P (P I))
              ((LAM X
                (((LAM X
                   ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                    ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                  X)
                 ((LAM X (LAM Y ((READ X) Y))) X)))
               X))))
           (LAM X (BOOK X)))
>     (THE)(BOOK WHICH I READ WITHOUT UNDERSTANDING) := S/(S\NP)
        : ((LAM X (LAM P (P X)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM X
              ((LAM P (P I))
               ((LAM X
                 (((LAM X
                    ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                     ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                   X)
                  ((LAM X (LAM Y ((READ X) Y))) X)))
                X))))
            (LAM X (BOOK X))))
LEX   (BURNS) := S\NP
        : (LAM X (BURN X))
>     (THE BOOK WHICH I READ WITHOUT UNDERSTANDING)(BURNS) := S
        : (((LAM X (LAM P (P X)))
            (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM X
               ((LAM P (P I))
                ((LAM X
                  (((LAM X
                     ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                      ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                    X)
                   ((LAM X (LAM Y ((READ X) Y))) X)))
                 X))))
             (LAM X (BOOK X))))
           (LAM X (BURN X)))

Final LF, normal-order evaluated: 

    (BURN (LAM X ((AND ((WITHOUT ((UNDERSTAND X) I)) ((READ X) I))) (BOOK X)))) =
    (BURN (\ X . AND (WITHOUT (UNDERSTAND X I) (READ X I)) (BOOK X)))

Derivation 2
--------------
LEX   (THE) := (S/(S\NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (BOOK) := N
        : (LAM X (BOOK X))
LEX   (WHICH) := (N\N)/(S/NP)
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (READ) := (S\NP)/NP
        : (LAM X (LAM Y ((READ X) Y)))
LEX   (WITHOUT) := ((S\NP)\(S\NP))/C
        : (LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
<Lx   (READ)(WITHOUT) := ((S\NP)/C)/NP
        : (LAM W
           (LAM Z
            (((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X))))) Z)
             ((LAM X (LAM Y ((READ X) Y))) W))))
LEX   (UNDERSTANDING) := C/NP
        : (LAM X (LAM Y ((UNDERSTAND X) Y)))
>S    (READ WITHOUT)(UNDERSTANDING) := (S\NP)/NP
        : (LAM X
           (((LAM W
              (LAM Z
               (((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X))))) Z)
                ((LAM X (LAM Y ((READ X) Y))) W))))
             X)
            ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
>B    (I)(READ WITHOUT UNDERSTANDING) := S/NP
        : (LAM X
           ((LAM P (P I))
            ((LAM X
              (((LAM W
                 (LAM Z
                  (((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X))))) Z)
                   ((LAM X (LAM Y ((READ X) Y))) W))))
                X)
               ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
             X)))
>     (WHICH)(I READ WITHOUT UNDERSTANDING) := N\N
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM X
            ((LAM P (P I))
             ((LAM X
               (((LAM W
                  (LAM Z
                   (((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X))))) Z)
                    ((LAM X (LAM Y ((READ X) Y))) W))))
                 X)
                ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
              X))))
<     (BOOK)(WHICH I READ WITHOUT UNDERSTANDING) := N
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             ((LAM P (P I))
              ((LAM X
                (((LAM W
                   (LAM Z
                    (((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X))))) Z)
                     ((LAM X (LAM Y ((READ X) Y))) W))))
                  X)
                 ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
               X))))
           (LAM X (BOOK X)))
>     (THE)(BOOK WHICH I READ WITHOUT UNDERSTANDING) := S/(S\NP)
        : ((LAM X (LAM P (P X)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM X
              ((LAM P (P I))
               ((LAM X
                 (((LAM W
                    (LAM Z
                     (((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X))))) Z)
                      ((LAM X (LAM Y ((READ X) Y))) W))))
                   X)
                  ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                X))))
            (LAM X (BOOK X))))
LEX   (BURNS) := S\NP
        : (LAM X (BURN X))
>     (THE BOOK WHICH I READ WITHOUT UNDERSTANDING)(BURNS) := S
        : (((LAM X (LAM P (P X)))
            (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM X
               ((LAM P (P I))
                ((LAM X
                  (((LAM W
                     (LAM Z
                      (((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X))))) Z)
                       ((LAM X (LAM Y ((READ X) Y))) W))))
                    X)
                   ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                 X))))
             (LAM X (BOOK X))))
           (LAM X (BURN X)))

Final LF, normal-order evaluated: 

    (BURN (LAM X ((AND ((WITHOUT ((UNDERSTAND X) I)) ((READ X) I))) (BOOK X)))) =
    (BURN (\ X . AND (WITHOUT (UNDERSTAND X I) (READ X I)) (BOOK X)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
JOSHIHENDERSON
========


Derivation 1
--------------
LEX   (KEN) := NP
        : KEN
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARBIE) := NP
        : BARBIE
>     (AND)(BARBIE) := NP\*NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE)
<     (KEN)(AND BARBIE) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN)
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X))))
>     (THAT)(KEN OWNS THE HOUSE) := SP
        : ((LAM P P)
           (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
            (LAM X
             (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))))
>     (SAID)(THAT KEN OWNS THE HOUSE) := S\NP
        : ((LAM P (LAM X ((SAY P) X)))
           ((LAM P P)
            (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
             (LAM X
              (((LAM LF (LAM P (P LF))) KEN)
               ((LAM X (LAM Y ((OWN X) Y))) X))))))
<     (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := S
        : (((LAM P (LAM X ((SAY P) X)))
            ((LAM P P)
             (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
              (LAM X
               (((LAM LF (LAM P (P LF))) KEN)
                ((LAM X (LAM Y ((OWN X) Y))) X))))))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))

Final LF, normal-order evaluated: 

    ((SAY ((OWN (LAM X (HOUSE X))) KEN)) (LAM X ((AND (BARBIE X)) (KEN X)))) =
    (SAY (OWN (\ X . HOUSE X) KEN) (\ X . AND (BARBIE X) (KEN X)))

Derivation 2
--------------
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
MTR   (BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) BARBIE)
>     (AND)(BARBIE) := (S/(S\NP))\*(S/(S\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           ((LAM LF (LAM P (P LF))) BARBIE))
<     (KEN)(AND BARBIE) := S/(S\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            ((LAM LF (LAM P (P LF))) BARBIE))
           ((LAM LF (LAM P (P LF))) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X))))
>     (THAT)(KEN OWNS THE HOUSE) := SP
        : ((LAM P P)
           (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
            (LAM X
             (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))))
>     (SAID)(THAT KEN OWNS THE HOUSE) := S\NP
        : ((LAM P (LAM X ((SAY P) X)))
           ((LAM P P)
            (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
             (LAM X
              (((LAM LF (LAM P (P LF))) KEN)
               ((LAM X (LAM Y ((OWN X) Y))) X))))))
>     (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             ((LAM LF (LAM P (P LF))) BARBIE))
            ((LAM LF (LAM P (P LF))) KEN))
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM P P)
             (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
              (LAM X
               (((LAM LF (LAM P (P LF))) KEN)
                ((LAM X (LAM Y ((OWN X) Y))) X)))))))

Final LF, normal-order evaluated: 

    ((AND ((SAY ((OWN (LAM X (HOUSE X))) KEN)) BARBIE))
     ((SAY ((OWN (LAM X (HOUSE X))) KEN)) KEN)) =
    (AND (SAY (OWN (\ X . HOUSE X) KEN) BARBIE)
     (SAY (OWN (\ X . HOUSE X) KEN) KEN))

Derivation 3
--------------
ETR   (KEN) := SP/(SP\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
ETR   (BARBIE) := SP/(SP\NP)
        : ((LAM LF (LAM P (P LF))) BARBIE)
>     (AND)(BARBIE) := (SP/(SP\NP))\*(SP/(SP\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           ((LAM LF (LAM P (P LF))) BARBIE))
<     (KEN)(AND BARBIE) := SP/(SP\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            ((LAM LF (LAM P (P LF))) BARBIE))
           ((LAM LF (LAM P (P LF))) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR-O (KEN) := (S\NP)\((S\NP)/NP)
        : ((LAM LF (LAM P (P LF))) KEN)
>Bx2  (THAT)(KEN) := (SP\NP)\((S\NP)/NP)
        : (LAM X (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
<Dx   (SAID)(THAT KEN) := (SP\NP)/(SP/NP)
        : (LAM H
           ((LAM X (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
            (LAM X ((LAM P (LAM X ((SAY P) X))) (H X)))))
LEX   (OWNS) := (SP\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
LEX   (THE) := ((SP\NP)\((SP\NP)/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := (SP\NP)\((SP\NP)/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (OWNS)(THE HOUSE) := SP\NP
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X (LAM Y ((OWN X) Y))))
>Dx   (SAID THAT KEN)(OWNS THE HOUSE) := (SP\NP)\(NP/NP)
        : (LAM H
           ((LAM H
             ((LAM X (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
              (LAM X ((LAM P (LAM X ((SAY P) X))) (H X)))))
            (LAM X
             ((((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
               (LAM X (LAM Y ((OWN X) Y))))
              (H X)))))
>Bx   (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := SP\(NP/NP)
        : (LAM X
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              ((LAM LF (LAM P (P LF))) BARBIE))
             ((LAM LF (LAM P (P LF))) KEN))
            ((LAM H
              ((LAM H
                ((LAM X
                  (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
                 (LAM X ((LAM P (LAM X ((SAY P) X))) (H X)))))
               (LAM X
                ((((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
                  (LAM X (LAM Y ((OWN X) Y))))
                 (H X)))))
             X)))

Final LF, normal-order evaluated: 

    (LAM X
     ((AND ((SAY ((OWN (LAM X (HOUSE X))) (X KEN))) BARBIE))
      ((SAY ((OWN (LAM X (HOUSE X))) (X KEN))) KEN))) =
    (\ X . AND (SAY (OWN (\ X . HOUSE X) (X KEN)) BARBIE)
     (SAY (OWN (\ X . HOUSE X) (X KEN)) KEN))

Derivation 4
--------------
LEX   (KEN) := NP
        : KEN
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARBIE) := NP
        : BARBIE
>     (AND)(BARBIE) := NP\*NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE)
<     (KEN)(AND BARBIE) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN)
MTR   (KEN AND BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X))))
>     (THAT)(KEN OWNS THE HOUSE) := SP
        : ((LAM P P)
           (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
            (LAM X
             (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))))
>     (SAID)(THAT KEN OWNS THE HOUSE) := S\NP
        : ((LAM P (LAM X ((SAY P) X)))
           ((LAM P P)
            (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
             (LAM X
              (((LAM LF (LAM P (P LF))) KEN)
               ((LAM X (LAM Y ((OWN X) Y))) X))))))
>     (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := S
        : (((LAM LF (LAM P (P LF)))
            (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM P P)
             (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
              (LAM X
               (((LAM LF (LAM P (P LF))) KEN)
                ((LAM X (LAM Y ((OWN X) Y))) X)))))))

Final LF, normal-order evaluated: 

    ((SAY ((OWN (LAM X (HOUSE X))) KEN)) (LAM X ((AND (BARBIE X)) (KEN X)))) =
    (SAY (OWN (\ X . HOUSE X) KEN) (\ X . AND (BARBIE X) (KEN X)))

Derivation 5
--------------
LEX   (KEN) := NP
        : KEN
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARBIE) := NP
        : BARBIE
>     (AND)(BARBIE) := NP\*NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE)
<     (KEN)(AND BARBIE) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN)
ETR   (KEN AND BARBIE) := SP/(SP\NP)
        : ((LAM LF (LAM P (P LF)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR-O (KEN) := (S\NP)\((S\NP)/NP)
        : ((LAM LF (LAM P (P LF))) KEN)
>Bx2  (THAT)(KEN) := (SP\NP)\((S\NP)/NP)
        : (LAM X (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
<Dx   (SAID)(THAT KEN) := (SP\NP)/(SP/NP)
        : (LAM H
           ((LAM X (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
            (LAM X ((LAM P (LAM X ((SAY P) X))) (H X)))))
LEX   (OWNS) := (SP\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
LEX   (THE) := ((SP\NP)\((SP\NP)/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := (SP\NP)\((SP\NP)/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (OWNS)(THE HOUSE) := SP\NP
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X (LAM Y ((OWN X) Y))))
>Dx   (SAID THAT KEN)(OWNS THE HOUSE) := (SP\NP)\(NP/NP)
        : (LAM H
           ((LAM H
             ((LAM X (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
              (LAM X ((LAM P (LAM X ((SAY P) X))) (H X)))))
            (LAM X
             ((((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
               (LAM X (LAM Y ((OWN X) Y))))
              (H X)))))
>Bx   (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := SP\(NP/NP)
        : (LAM X
           (((LAM LF (LAM P (P LF)))
             (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
            ((LAM H
              ((LAM H
                ((LAM X
                  (LAM Y ((LAM P P) ((((LAM LF (LAM P (P LF))) KEN) X) Y))))
                 (LAM X ((LAM P (LAM X ((SAY P) X))) (H X)))))
               (LAM X
                ((((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
                  (LAM X (LAM Y ((OWN X) Y))))
                 (H X)))))
             X)))

Final LF, normal-order evaluated: 

    (LAM X
     ((SAY ((OWN (LAM X (HOUSE X))) (X KEN)))
      (LAM X ((AND (BARBIE X)) (KEN X))))) =
    (\ X . SAY (OWN (\ X . HOUSE X) (X KEN)) (\ X . AND (BARBIE X) (KEN X)))

Derivation 6
--------------
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
MTR   (BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) BARBIE)
>     (AND)(BARBIE) := (S/(S\NP))\*(S/(S\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           ((LAM LF (LAM P (P LF))) BARBIE))
<     (KEN)(AND BARBIE) := S/(S\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            ((LAM LF (LAM P (P LF))) BARBIE))
           ((LAM LF (LAM P (P LF))) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
>B    (THAT)(KEN OWNS) := SP/NP
        : (LAM X
           ((LAM P P)
            ((LAM X
              (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
             X)))
>B    (SAID)(THAT KEN OWNS) := (S\NP)/NP
        : (LAM X
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM X
              ((LAM P P)
               ((LAM X
                 (((LAM LF (LAM P (P LF))) KEN)
                  ((LAM X (LAM Y ((OWN X) Y))) X)))
                X)))
             X)))
>B    (KEN AND BARBIE)(SAID THAT KEN OWNS) := S/NP
        : (LAM X
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              ((LAM LF (LAM P (P LF))) BARBIE))
             ((LAM LF (LAM P (P LF))) KEN))
            ((LAM X
              ((LAM P (LAM X ((SAY P) X)))
               ((LAM X
                 ((LAM P P)
                  ((LAM X
                    (((LAM LF (LAM P (P LF))) KEN)
                     ((LAM X (LAM Y ((OWN X) Y))) X)))
                   X)))
                X)))
             X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN AND BARBIE SAID THAT KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               ((LAM LF (LAM P (P LF))) BARBIE))
              ((LAM LF (LAM P (P LF))) KEN))
             ((LAM X
               ((LAM P (LAM X ((SAY P) X)))
                ((LAM X
                  ((LAM P P)
                   ((LAM X
                     (((LAM LF (LAM P (P LF))) KEN)
                      ((LAM X (LAM Y ((OWN X) Y))) X)))
                    X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((AND ((SAY ((OWN (LAM X (HOUSE X))) KEN)) BARBIE))
     ((SAY ((OWN (LAM X (HOUSE X))) KEN)) KEN)) =
    (AND (SAY (OWN (\ X . HOUSE X) KEN) BARBIE)
     (SAY (OWN (\ X . HOUSE X) KEN) KEN))

Derivation 7
--------------
LEX   (KEN) := NP
        : KEN
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARBIE) := NP
        : BARBIE
>     (AND)(BARBIE) := NP\*NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE)
<     (KEN)(AND BARBIE) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN)
MTR   (KEN AND BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
>B    (THAT)(KEN OWNS) := SP/NP
        : (LAM X
           ((LAM P P)
            ((LAM X
              (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
             X)))
>B    (SAID)(THAT KEN OWNS) := (S\NP)/NP
        : (LAM X
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM X
              ((LAM P P)
               ((LAM X
                 (((LAM LF (LAM P (P LF))) KEN)
                  ((LAM X (LAM Y ((OWN X) Y))) X)))
                X)))
             X)))
>B    (KEN AND BARBIE)(SAID THAT KEN OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF)))
             (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
            ((LAM X
              ((LAM P (LAM X ((SAY P) X)))
               ((LAM X
                 ((LAM P P)
                  ((LAM X
                    (((LAM LF (LAM P (P LF))) KEN)
                     ((LAM X (LAM Y ((OWN X) Y))) X)))
                   X)))
                X)))
             X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN AND BARBIE SAID THAT KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF)))
              (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
             ((LAM X
               ((LAM P (LAM X ((SAY P) X)))
                ((LAM X
                  ((LAM P P)
                   ((LAM X
                     (((LAM LF (LAM P (P LF))) KEN)
                      ((LAM X (LAM Y ((OWN X) Y))) X)))
                    X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((SAY ((OWN (LAM X (HOUSE X))) KEN)) (LAM X ((AND (BARBIE X)) (KEN X)))) =
    (SAY (OWN (\ X . HOUSE X) KEN) (\ X . AND (BARBIE X) (KEN X)))

Derivation 8
--------------
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
MTR   (BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) BARBIE)
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
>B    (THAT)(KEN) := SP/(S\NP)
        : (LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X)))
>B    (SAID)(THAT KEN) := (S\NP)/(S\NP)
        : (LAM X
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
>B    (BARBIE)(SAID THAT KEN) := S/(S\NP)
        : (LAM X
           (((LAM LF (LAM P (P LF))) BARBIE)
            ((LAM X
              ((LAM P (LAM X ((SAY P) X)))
               ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
             X)))
>     (AND)(BARBIE SAID THAT KEN) := (S/(S\NP))\*(S/(S\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM X
            (((LAM LF (LAM P (P LF))) BARBIE)
             ((LAM X
               ((LAM P (LAM X ((SAY P) X)))
                ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
              X))))
<     (KEN)(AND BARBIE SAID THAT KEN) := S/(S\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             (((LAM LF (LAM P (P LF))) BARBIE)
              ((LAM X
                ((LAM P (LAM X ((SAY P) X)))
                 ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
               X))))
           ((LAM LF (LAM P (P LF))) KEN))
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN AND BARBIE SAID THAT KEN)(OWNS) := S/NP
        : (LAM X
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM X
               (((LAM LF (LAM P (P LF))) BARBIE)
                ((LAM X
                  ((LAM P (LAM X ((SAY P) X)))
                   ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
                 X))))
             ((LAM LF (LAM P (P LF))) KEN))
            ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN AND BARBIE SAID THAT KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM X
                (((LAM LF (LAM P (P LF))) BARBIE)
                 ((LAM X
                   ((LAM P (LAM X ((SAY P) X)))
                    ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
                  X))))
              ((LAM LF (LAM P (P LF))) KEN))
             ((LAM X (LAM Y ((OWN X) Y))) X))))

Final LF, normal-order evaluated: 

    ((AND ((SAY ((OWN (LAM X (HOUSE X))) KEN)) BARBIE))
     ((OWN (LAM X (HOUSE X))) KEN)) =
    (AND (SAY (OWN (\ X . HOUSE X) KEN) BARBIE) (OWN (\ X . HOUSE X) KEN))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
B3TEST
========


Derivation 1
--------------
LEX   (VER) := ((S\NP)\NP)\NP
        : (LAM X (LAM Y (LAM Z (((GIVE Y) X) Z))))
LEX   (-DIR) := ((S\NP)\NP)\(S\NP)
        : (LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
<B2   (VER)(-DIR) := (((S\NP)\NP)\NP)\NP
        : (LAM X
           (LAM Y
            ((LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
             (((LAM X (LAM Y (LAM Z (((GIVE Y) X) Z)))) X) Y))))
LEX   (-T) := ((S\NP)\NP)\(S\NP)
        : (LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
<B3   (VER -DIR)(-T) := ((((S\NP)\NP)\NP)\NP)\NP
        : (LAM X
           (LAM Y
            (LAM Z
             ((LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
              ((((LAM X
                  (LAM Y
                   ((LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
                    (((LAM X (LAM Y (LAM Z (((GIVE Y) X) Z)))) X) Y))))
                 X)
                Y)
               Z)))))

Final LF, normal-order evaluated: 

    (LAM X
     (LAM Y
      (LAM Z
       (LAM G610 (LAM G611 ((CAUSE ((CAUSE (((GIVE Y) X) Z)) G610)) G611)))))) =
    (\ X . \ Y . \ Z . \ G637 . \ G638 . CAUSE (CAUSE (GIVE Y X Z) G637) G638)

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
OTEST
========

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
CL169
========

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
PARGAP
========


Derivation 1
--------------
LEX   (THE) := (S/(S\NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (BOOK) := N
        : (LAM X (BOOK X))
LEX   (WHICH) := (N\N)/(S/NP)
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (READ) := (S\NP)/NP
        : (LAM X (LAM Y ((READ X) Y)))
LEX   (WITHOUT) := ((S\NP)\(S\NP))/C
        : (LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
LEX   (UNDERSTANDING) := C/NP
        : (LAM X (LAM Y ((UNDERSTAND X) Y)))
>B    (WITHOUT)(UNDERSTANDING) := ((S\NP)\(S\NP))/NP
        : (LAM X
           ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
            ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
<Sx   (READ)(WITHOUT UNDERSTANDING) := (S\NP)/NP
        : (LAM X
           (((LAM X
              ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
               ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
             X)
            ((LAM X (LAM Y ((READ X) Y))) X)))
>B    (I)(READ WITHOUT UNDERSTANDING) := S/NP
        : (LAM X
           ((LAM P (P I))
            ((LAM X
              (((LAM X
                 ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                  ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                X)
               ((LAM X (LAM Y ((READ X) Y))) X)))
             X)))
>     (WHICH)(I READ WITHOUT UNDERSTANDING) := N\N
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM X
            ((LAM P (P I))
             ((LAM X
               (((LAM X
                  ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                   ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                 X)
                ((LAM X (LAM Y ((READ X) Y))) X)))
              X))))
<     (BOOK)(WHICH I READ WITHOUT UNDERSTANDING) := N
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             ((LAM P (P I))
              ((LAM X
                (((LAM X
                   ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                    ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                  X)
                 ((LAM X (LAM Y ((READ X) Y))) X)))
               X))))
           (LAM X (BOOK X)))
>     (THE)(BOOK WHICH I READ WITHOUT UNDERSTANDING) := S/(S\NP)
        : ((LAM X (LAM P (P X)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM X
              ((LAM P (P I))
               ((LAM X
                 (((LAM X
                    ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                     ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                   X)
                  ((LAM X (LAM Y ((READ X) Y))) X)))
                X))))
            (LAM X (BOOK X))))
LEX   (BURNS) := S\NP
        : (LAM X (BURN X))
>     (THE BOOK WHICH I READ WITHOUT UNDERSTANDING)(BURNS) := S
        : (((LAM X (LAM P (P X)))
            (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM X
               ((LAM P (P I))
                ((LAM X
                  (((LAM X
                     ((LAM P (LAM Q (LAM X ((WITHOUT (P X)) (Q X)))))
                      ((LAM X (LAM Y ((UNDERSTAND X) Y))) X)))
                    X)
                   ((LAM X (LAM Y ((READ X) Y))) X)))
                 X))))
             (LAM X (BOOK X))))
           (LAM X (BURN X)))

Final LF, normal-order evaluated: 

    (BURN (LAM X ((AND ((WITHOUT ((UNDERSTAND X) I)) ((READ X) I))) (BOOK X)))) =
    (BURN (\ X . AND (WITHOUT (UNDERSTAND X I) (READ X I)) (BOOK X)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
JOSHIHENDERSON
========


Derivation 1
--------------
LEX   (KEN) := NP
        : KEN
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARBIE) := NP
        : BARBIE
>     (AND)(BARBIE) := NP\*NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE)
<     (KEN)(AND BARBIE) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN)
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X))))
>     (THAT)(KEN OWNS THE HOUSE) := SP
        : ((LAM P P)
           (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
            (LAM X
             (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))))
>     (SAID)(THAT KEN OWNS THE HOUSE) := S\NP
        : ((LAM P (LAM X ((SAY P) X)))
           ((LAM P P)
            (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
             (LAM X
              (((LAM LF (LAM P (P LF))) KEN)
               ((LAM X (LAM Y ((OWN X) Y))) X))))))
<     (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := S
        : (((LAM P (LAM X ((SAY P) X)))
            ((LAM P P)
             (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
              (LAM X
               (((LAM LF (LAM P (P LF))) KEN)
                ((LAM X (LAM Y ((OWN X) Y))) X))))))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))

Final LF, normal-order evaluated: 

    ((SAY ((OWN (LAM X (HOUSE X))) KEN)) (LAM X ((AND (BARBIE X)) (KEN X)))) =
    (SAY (OWN (\ X . HOUSE X) KEN) (\ X . AND (BARBIE X) (KEN X)))

Derivation 2
--------------
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
MTR   (BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) BARBIE)
>     (AND)(BARBIE) := (S/(S\NP))\*(S/(S\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           ((LAM LF (LAM P (P LF))) BARBIE))
<     (KEN)(AND BARBIE) := S/(S\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            ((LAM LF (LAM P (P LF))) BARBIE))
           ((LAM LF (LAM P (P LF))) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X))))
>     (THAT)(KEN OWNS THE HOUSE) := SP
        : ((LAM P P)
           (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
            (LAM X
             (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))))
>     (SAID)(THAT KEN OWNS THE HOUSE) := S\NP
        : ((LAM P (LAM X ((SAY P) X)))
           ((LAM P P)
            (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
             (LAM X
              (((LAM LF (LAM P (P LF))) KEN)
               ((LAM X (LAM Y ((OWN X) Y))) X))))))
>     (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := S
        : ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             ((LAM LF (LAM P (P LF))) BARBIE))
            ((LAM LF (LAM P (P LF))) KEN))
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM P P)
             (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
              (LAM X
               (((LAM LF (LAM P (P LF))) KEN)
                ((LAM X (LAM Y ((OWN X) Y))) X)))))))

Final LF, normal-order evaluated: 

    ((AND ((SAY ((OWN (LAM X (HOUSE X))) KEN)) BARBIE))
     ((SAY ((OWN (LAM X (HOUSE X))) KEN)) KEN)) =
    (AND (SAY (OWN (\ X . HOUSE X) KEN) BARBIE)
     (SAY (OWN (\ X . HOUSE X) KEN) KEN))

Derivation 3
--------------
LEX   (KEN) := NP
        : KEN
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARBIE) := NP
        : BARBIE
>     (AND)(BARBIE) := NP\*NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE)
<     (KEN)(AND BARBIE) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN)
MTR   (KEN AND BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X))))
>     (THAT)(KEN OWNS THE HOUSE) := SP
        : ((LAM P P)
           (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
            (LAM X
             (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))))
>     (SAID)(THAT KEN OWNS THE HOUSE) := S\NP
        : ((LAM P (LAM X ((SAY P) X)))
           ((LAM P P)
            (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
             (LAM X
              (((LAM LF (LAM P (P LF))) KEN)
               ((LAM X (LAM Y ((OWN X) Y))) X))))))
>     (KEN AND BARBIE)(SAID THAT KEN OWNS THE HOUSE) := S
        : (((LAM LF (LAM P (P LF)))
            (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM P P)
             (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
              (LAM X
               (((LAM LF (LAM P (P LF))) KEN)
                ((LAM X (LAM Y ((OWN X) Y))) X)))))))

Final LF, normal-order evaluated: 

    ((SAY ((OWN (LAM X (HOUSE X))) KEN)) (LAM X ((AND (BARBIE X)) (KEN X)))) =
    (SAY (OWN (\ X . HOUSE X) KEN) (\ X . AND (BARBIE X) (KEN X)))

Derivation 4
--------------
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
MTR   (BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) BARBIE)
>     (AND)(BARBIE) := (S/(S\NP))\*(S/(S\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           ((LAM LF (LAM P (P LF))) BARBIE))
<     (KEN)(AND BARBIE) := S/(S\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            ((LAM LF (LAM P (P LF))) BARBIE))
           ((LAM LF (LAM P (P LF))) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
>B    (THAT)(KEN OWNS) := SP/NP
        : (LAM X
           ((LAM P P)
            ((LAM X
              (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
             X)))
>B    (SAID)(THAT KEN OWNS) := (S\NP)/NP
        : (LAM X
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM X
              ((LAM P P)
               ((LAM X
                 (((LAM LF (LAM P (P LF))) KEN)
                  ((LAM X (LAM Y ((OWN X) Y))) X)))
                X)))
             X)))
>B    (KEN AND BARBIE)(SAID THAT KEN OWNS) := S/NP
        : (LAM X
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              ((LAM LF (LAM P (P LF))) BARBIE))
             ((LAM LF (LAM P (P LF))) KEN))
            ((LAM X
              ((LAM P (LAM X ((SAY P) X)))
               ((LAM X
                 ((LAM P P)
                  ((LAM X
                    (((LAM LF (LAM P (P LF))) KEN)
                     ((LAM X (LAM Y ((OWN X) Y))) X)))
                   X)))
                X)))
             X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN AND BARBIE SAID THAT KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               ((LAM LF (LAM P (P LF))) BARBIE))
              ((LAM LF (LAM P (P LF))) KEN))
             ((LAM X
               ((LAM P (LAM X ((SAY P) X)))
                ((LAM X
                  ((LAM P P)
                   ((LAM X
                     (((LAM LF (LAM P (P LF))) KEN)
                      ((LAM X (LAM Y ((OWN X) Y))) X)))
                    X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((AND ((SAY ((OWN (LAM X (HOUSE X))) KEN)) BARBIE))
     ((SAY ((OWN (LAM X (HOUSE X))) KEN)) KEN)) =
    (AND (SAY (OWN (\ X . HOUSE X) KEN) BARBIE)
     (SAY (OWN (\ X . HOUSE X) KEN) KEN))

Derivation 5
--------------
LEX   (KEN) := NP
        : KEN
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (BARBIE) := NP
        : BARBIE
>     (AND)(BARBIE) := NP\*NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE)
<     (KEN)(AND BARBIE) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN)
MTR   (KEN AND BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN)(OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
>B    (THAT)(KEN OWNS) := SP/NP
        : (LAM X
           ((LAM P P)
            ((LAM X
              (((LAM LF (LAM P (P LF))) KEN) ((LAM X (LAM Y ((OWN X) Y))) X)))
             X)))
>B    (SAID)(THAT KEN OWNS) := (S\NP)/NP
        : (LAM X
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM X
              ((LAM P P)
               ((LAM X
                 (((LAM LF (LAM P (P LF))) KEN)
                  ((LAM X (LAM Y ((OWN X) Y))) X)))
                X)))
             X)))
>B    (KEN AND BARBIE)(SAID THAT KEN OWNS) := S/NP
        : (LAM X
           (((LAM LF (LAM P (P LF)))
             (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
            ((LAM X
              ((LAM P (LAM X ((SAY P) X)))
               ((LAM X
                 ((LAM P P)
                  ((LAM X
                    (((LAM LF (LAM P (P LF))) KEN)
                     ((LAM X (LAM Y ((OWN X) Y))) X)))
                   X)))
                X)))
             X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN AND BARBIE SAID THAT KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            (((LAM LF (LAM P (P LF)))
              (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) BARBIE) KEN))
             ((LAM X
               ((LAM P (LAM X ((SAY P) X)))
                ((LAM X
                  ((LAM P P)
                   ((LAM X
                     (((LAM LF (LAM P (P LF))) KEN)
                      ((LAM X (LAM Y ((OWN X) Y))) X)))
                    X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((SAY ((OWN (LAM X (HOUSE X))) KEN)) (LAM X ((AND (BARBIE X)) (KEN X)))) =
    (SAY (OWN (\ X . HOUSE X) KEN) (\ X . AND (BARBIE X) (KEN X)))

Derivation 6
--------------
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
MTR   (BARBIE) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) BARBIE)
LEX   (SAID) := (S\NP)/SP
        : (LAM P (LAM X ((SAY P) X)))
LEX   (THAT) := SP/S
        : (LAM P P)
MTR   (KEN) := S/(S\NP)
        : ((LAM LF (LAM P (P LF))) KEN)
>B    (THAT)(KEN) := SP/(S\NP)
        : (LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X)))
>B    (SAID)(THAT KEN) := (S\NP)/(S\NP)
        : (LAM X
           ((LAM P (LAM X ((SAY P) X)))
            ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
>B    (BARBIE)(SAID THAT KEN) := S/(S\NP)
        : (LAM X
           (((LAM LF (LAM P (P LF))) BARBIE)
            ((LAM X
              ((LAM P (LAM X ((SAY P) X)))
               ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
             X)))
>     (AND)(BARBIE SAID THAT KEN) := (S/(S\NP))\*(S/(S\NP))
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM X
            (((LAM LF (LAM P (P LF))) BARBIE)
             ((LAM X
               ((LAM P (LAM X ((SAY P) X)))
                ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
              X))))
<     (KEN)(AND BARBIE SAID THAT KEN) := S/(S\NP)
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             (((LAM LF (LAM P (P LF))) BARBIE)
              ((LAM X
                ((LAM P (LAM X ((SAY P) X)))
                 ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
               X))))
           ((LAM LF (LAM P (P LF))) KEN))
LEX   (OWNS) := (S\NP)/NP
        : (LAM X (LAM Y ((OWN X) Y)))
>B    (KEN AND BARBIE SAID THAT KEN)(OWNS) := S/NP
        : (LAM X
           ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
              (LAM X
               (((LAM LF (LAM P (P LF))) BARBIE)
                ((LAM X
                  ((LAM P (LAM X ((SAY P) X)))
                   ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
                 X))))
             ((LAM LF (LAM P (P LF))) KEN))
            ((LAM X (LAM Y ((OWN X) Y))) X)))
LEX   (THE) := (S\(S/NP))/*N
        : (LAM X (LAM P (P X)))
LEX   (HOUSE) := N
        : (LAM X (HOUSE X))
>     (THE)(HOUSE) := S\(S/NP)
        : ((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
<     (KEN AND BARBIE SAID THAT KEN OWNS)(THE HOUSE) := S
        : (((LAM X (LAM P (P X))) (LAM X (HOUSE X)))
           (LAM X
            ((((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
               (LAM X
                (((LAM LF (LAM P (P LF))) BARBIE)
                 ((LAM X
                   ((LAM P (LAM X ((SAY P) X)))
                    ((LAM X ((LAM P P) (((LAM LF (LAM P (P LF))) KEN) X))) X)))
                  X))))
              ((LAM LF (LAM P (P LF))) KEN))
             ((LAM X (LAM Y ((OWN X) Y))) X))))

Final LF, normal-order evaluated: 

    ((AND ((SAY ((OWN (LAM X (HOUSE X))) KEN)) BARBIE))
     ((OWN (LAM X (HOUSE X))) KEN)) =
    (AND (SAY (OWN (\ X . HOUSE X) KEN) BARBIE) (OWN (\ X . HOUSE X) KEN))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
=======
B3TEST
========


Derivation 1
--------------
LEX   (VER) := ((S\NP)\NP)\NP
        : (LAM X (LAM Y (LAM Z (((GIVE Y) X) Z))))
LEX   (-DIR) := ((S\NP)\NP)\(S\NP)
        : (LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
<B2   (VER)(-DIR) := (((S\NP)\NP)\NP)\NP
        : (LAM X
           (LAM Y
            ((LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
             (((LAM X (LAM Y (LAM Z (((GIVE Y) X) Z)))) X) Y))))
LEX   (-T) := ((S\NP)\NP)\(S\NP)
        : (LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
<B3   (VER -DIR)(-T) := ((((S\NP)\NP)\NP)\NP)\NP
        : (LAM X
           (LAM Y
            (LAM Z
             ((LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
              ((((LAM X
                  (LAM Y
                   ((LAM P (LAM X (LAM Y ((CAUSE (P X)) Y))))
                    (((LAM X (LAM Y (LAM Z (((GIVE Y) X) Z)))) X) Y))))
                 X)
                Y)
               Z)))))

Final LF, normal-order evaluated: 

    (LAM X
     (LAM Y
      (LAM Z
       (LAM G704 (LAM G705 ((CAUSE ((CAUSE (((GIVE Y) X) Z)) G704)) G705)))))) =
    (\ X . \ Y . \ Z . \ G731 . \ G732 . CAUSE (CAUSE (GIVE Y X Z) G731) G732)

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
> (dribble)
